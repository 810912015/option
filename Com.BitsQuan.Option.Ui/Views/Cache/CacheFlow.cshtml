@*@model IEnumerable<Com.BitsQuan.Option.Core.AccountTradeRecord>*@
@model Com.BitsQuan.Option.Ui.Models.WhereModel

<style>
    /*右侧内容*/
    .title {
        font-family: "微软雅黑";
        font-weight: 400;
        font-size: 18px;
        color: #666666;
        display: block;
        margin: 0 auto;
        width: 100px;
    }

    .rb {
        margin-top: 10px;
        width: 780px;
    }

    .sline li {
        float: left;
        display: inline-block;
    }

    .sline {
        overflow: hidden;
        background-color: #f2f2f2;
        display: inline;
        margin-bottom: 10px;
    }

        .sline li > select {
            height: 30px;
        }

    .sl1 {
        margin-left: 20px;
    }




    .sl2 {
        margin-left: 20px;
    }



    .sub {
        background: #5CA0E7;
        border: 0;
        border-radius: 3px;
        width: 80px;
        height: 30px;
        line-height: 22px;
        color: white;
        cursor: pointer;
        margin: 10px 0 0 10px;
    }

    .text li {
        text-align: center;
        float: left;
        font-size: 12px;
        line-height: 30px;
        border-top: 1px solid #c2c2c2;
    }

    .text {
        overflow: hidden;
    }

    .text1 {
        width: 120px;
    }

    .text2 {
        width: 80px;
    }

    .text3 {
        width: 130px;
    }

    .text4 {
        width: 90px;
    }

    .text5 {
        width: 70px;
    }

    .text6 {
        width: 90px;
    }

    .text7 {
        width: 60px;
    }

    .text8 {
        width: 80px;
    }

    .text9 {
        width: 80px;
    }
</style>


<link href="~/Scripts/bstimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/bstimepicker/bootstrap-datetimepicker.min.js"></script>
<div style="min-height:400px;" id="cache">
    <div id="cacheflow">
        @using (Ajax.BeginForm("cacheflow", "cache", null, new AjaxOptions
    {
        UpdateTargetId = "cacheflow"
    }, new
    {
        role = "form"
    }))
        {
            <div class="rb">
                <div>
                    <ul class="sline">
                        <li>
                            @Html.LabelFor(a => a.StartTime)
                            @Html.TextBoxFor(a => a.StartTime, "{0:yyyy-MM-dd}", new { id = "datetimepicker", style = "width:145px;height:30px;margin-top:10px;" })
                        </li>
                        <li>
                            &nbsp;&nbsp;
                            @Html.LabelFor(a => a.EndTime)
                            @Html.TextBoxFor(a => a.EndTime, "{0:yyyy-MM-dd}", new { id = "datetimepicker2", style = "width:145px;height:30px!important;margin-top:10px;" })
                            &nbsp;&nbsp;@Html.LabelFor(a => a.Type)
                            @Html.DropDownListFor(a => a.Type, (List<SelectListItem>)ViewData["TradeFlowType2"])

                        </li>
                        <li><input type="submit" value="确定" class="sub"></li>
                    </ul>

                </div>

            </div>
        }


        <table class="table table-striped">
            <tr>
                <th width="25%">时间</th>
                @*<th width="8%">编号1</th>*@
                <th width="25%">项目</th>
                <th width="25%">发生金额</th>
                <th width="25%">账户余额</th>

                @*<th width="8%">结果</th>
                    <th width="41%">描述</th>*@
            </tr>
            @if (ViewData["CacheFlow"] != null)
            {
                foreach (var v in ViewData["CacheFlow"] as List<Com.BitsQuan.Option.Core.AccountTradeRecord>)
                {
                    <tr>
                        <td>@v.When</td>
                        @*<td>@v.Id</td>*@
                        <td>@v.OperateType</td>
                        <td>
                            @((int)v.OperateType < 8 ||
                            (int)v.OperateType == 23 ||
                                (int)v.OperateType == 17 ||
                                (int)v.OperateType == 18 ? "-" : "") @(v.Delta < 0.01m ? 0.01m : v.Delta)

                            </td>
                            <td>@v.Current</td>

                            @*<td>@(v.IsAddTo ? "成功" : "失败")</td>
                                <td>@Html.DisplayFor(m => v.OrderDesc)</td>*@
                        </tr>
                }
            }

        </table>
        @Html.Partial("_Pager", ViewData["cache"])

        <div class="input-append date">

            <span class="add-on">
                <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
            </span>
        </div>
    </div>
</div>
@*<script src="~/Scripts/bstimepicker/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/bstimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>*@
<script type="text/javascript">
    $('#datetimepicker').datetimepicker({
        language: 'zh-CN',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 'true',
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        maxView: 2,
        forceParse: 0,
        format: 'yyyy-mm-dd',
    });

    $('#datetimepicker2').datetimepicker({
        language: 'zh-CN',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 'true',
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        maxView: 2,
        forceParse: 0,
        format: 'yyyy-mm-dd',
    });

    //function CacheOk() {
    //    var time = $("#datetimepicker").val();
    //    var time2 = $("#datetimepicker2").val();
    //    alert("time" + time + "///////time2:"+time2);
    //    $.get("/Cache/CachewhereShow", { "time": time, "time2": time2 }, function (d) {
    //        //? "成功" : "失败"
    //        alert("aaaa:" + d.length);
    //        var html = "";
    //        for (var i = 0; i < d.length; i++) {
    //            var ob = d[i];
    //            html += "<tr>\
    //                <td>" + ob.Id + "</td>\
    //                <td>" + ob.OperateType + "</td>\
    //                <td></td>\
    //                <td>" + ob.Current + "</td>\
    //                <td>" + ob.When + "</td>\
    //                <td>" + ob.IsAddTo  + "</td>\
    //                <td>" + ob.OrderDesc + "</td>\
    //            </tr>";
    //        }
    //      //  alert(html);
    //        $("#body").html(html);
    //    })
    //}
</script>

